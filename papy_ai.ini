;*************************************************
; MAIN AI PARAMETERS
;
; please add all new entries in ALPHABETICAL ORDER
; within their section
;*************************************************

[ behavior ]
;auto_blocker_line_speed_pct = 0.97 ; % of race line speed below which carshould automatically be considered a potential blocker
auto_blocker_line_speed_pct = 2.0 ; % of race line speed below which carshould automatically be considered a potential blocker
base_gearshift_hiatus = 7.0                 ; base time (in ticks) engine is disengaged for a gear shift
crashing_recovery_alt = 0.6                 ; altitude threshold below which will attempt recovery from crashing mode
crashing_recovery_pitch_roll = 0.96         ; safe pitch/roll velocity v. surface normal cosine for recovery from crashing mode
;crashing_recovery_slip_angle = 0.35         ; slip angle threshold (~ 20 degrees)below which will attempt recovery from crashing mode
crashing_recovery_slip_angle = 0.8         ; slip angle threshold (~ 20 degrees)below which will attempt recovery from crashing mode
;crashing_recovery_yaw_velocity = 0.05       ; yaw vel. threshold below which will attempt recovery from crashing mode
crashing_recovery_yaw_velocity = 0.20       ; yaw vel. threshold below which will attempt recovery from crashing mode

[ driver ]
ai_strength_to_traction_circle = 1.0
ai_strength_to_aero_drag = 0.3
ai_strength_to_engine_power = 0.2
ai_strength_to_traction_circle_spread = 8.0
ai_strength_to_engine_power_spread = 4.0
ai_strength_to_aero_drag_spread = 4.0
driver_qualifying_to_traction_circle = 0.02
driver_qualifying_to_aero_drag = 0.03
driver_qualifying_to_engine_power = 0.015
driver_roadcourse_to_traction_circle = 0.03
driver_shorttrack_to_traction_circle = 0.03
driver_speedway_to_traction_circle = 0.03
driver_superspeedway_to_traction_circle = 0.03
vehicle_aero_to_aero_drag = 0.13
vehicle_engine_to_engine_power = 0.07
;vehicle_chassis_to_traction_circle = 0.05
vehicle_chassis_to_traction_circle = 0.5
ai_strength_to_driver_consistency_spread = 3.0
;driver_consistency = 0.95
driver_consistency = 1.0
;driver_consistency_to_driver_commitment_dev = 0.03
driver_consistency_to_driver_commitment_dev = 0.0001
;driver_consistency_to_dlong_lookahead_dev = 0.4
driver_consistency_to_dlong_lookahead_dev = 0.0001
;driver_consistency_to_dlat_lookahead_dev = 0.75
driver_consistency_to_dlat_lookahead_dev = 0.0001
;driver_consistency_to_left_offset_dev = 0.08
driver_consistency_to_left_offset_dev = 0.2
pitcrew_speed_to_pitcrew_speed = 0.1
pitcrew_consistency_to_pitcrew_consistency = 0.9
driver_finishing_to_driver_consistency = 0.4

[ mechanical ]
base_brake_wear = 0.0                       ; wear (as max_decel coeff.) per kilometer (1000 ms)
base_suspension_failure_coeff = 0.6         ; * traction circle = adj. traction circle
base_suspension_problem_coeff = 0.8         ; * traction circle = adj. traction circle
base_tire_failure_coeff = 0.5               ; * traction circle = adj. traction circle
base_tire_wear = 0.00053                    ; wear
driver_fuel_consumption_scaling = 0.0       ; scales effect of quickness, smoothness, and aggression
driver_tire_break_wear_scaling = 0.0        ; scales effect of smoothness and aggression
;mechanical_failure_chance = 12.0            ; chance in 10000 (!!) per ACTIVE AI car for induced problem/failure each interval
mechanical_failure_chance = 0.0            ; chance in 10000 (!!) per ACTIVE AI car for induced problem/failure each interval
mechanical_failure_interval = 540.0         ; average interval in ticks to check for mechanical problem/failure (gets randomized)
suspension_cond_accel_scaling = 0.1         ; max_accel *= SCALE_COEFF(suspension_condition,value)
suspension_cond_decel_scaling = 0.5         ; max_decel *= SCALE_COEFF(suspension_condition,value)
suspension_mechanical_drag_coeff = 0.0025   ; meters/tick^2 drag--see aiCar::ComputeMechanicalDrag
suspension_problem_pitch_adj_coeff = 0.1    ; value * susp. condition adjusts pitch
suspension_problem_roll_adj_coeff = 0.1     ; value * susp. condition adjusts roll
suspension_problem_slip_angle_adj = 0.15    ; value * slip angle * k is added to suspension coeff.
tire_cond_accel_scaling = 0.1               ; max_accel *= SCALE_COEFF(tire_condition,value)
tire_cond_decel_scaling = 0.3               ; max_decel *= SCALE_COEFF(tire_condition,value)
tire_failure_mechanical_drag_coeff = 0.003  ; meters/tick^2 drag--see aiCar::ComputeMechanicalDrag
tire_problem_slip_angle_adj = 0.15          ; value * slip angle * k is added to tire coeff.
; mechanical problem chances, should total 100
suspension_problem_chance = 2.0             ; % chance any problem involves suspension problem
tire_problem_chance = 10.0                  ; % chance any problem involves tire problem
fuel_system_problem_chance = 2.0            ; % chance any problem involves fuel system problem
engine_problem_chance = 9.0                 ; % chance any problem involves engine problem
brake_problem_chance = 5.0                  ; % chance any problem involves brake problem
suspension_failure_chance = 1.0             ; % chance any problem/failure involves suspension failure
tire_failure_chance = 25.0                  ; % chance any problem/failure involves tire failure
fuel_system_failure_chance = 5.0            ; % chance any problem/failure involves fuel system failure
engine_failure_chance = 30.0                ; % chance any problem/failure involves engine failure
brake_failure_chance = 2.0                  ; % chance any problem/failure involves brake failure
fuel_leak_chance = 2.0                      ; % chance any problem/failure involves fuel leak
coolant_leak_chance = 2.0                   ; % chance any problem/failure involves coolant leak
oil_leak_chance = 5.0                       ; % chance any problem/failure involves oil leak

[ physics ]
alt_accel_k1 = 0.085                        ; k1 for altitude control spring/damper
alt_accel_k2 = 0.28                         ; k2 for altitude control spring/damper
cold_tire_coeff = 1.0                       ; traction circle coeff. for AI cold tires
drive_train_friction_adj = 0.25             ; fudge factor for drive train friction coeff. use for max. engine accel
idle_scaled_power = 0.016                   ; eng. power when engine idling scaled between 0 and 1
;inertial_factor = 0.1                       ; adj. max_accel to simulate inertia--see aiAdvanceCarOnLine()
inertial_factor = 0.1                       ; adj. max_accel to simulate inertia--see aiAdvanceCarOnLine()
gear_shift_rpm_decrement = 195.0            ; during gear shift decrement RPM each tick by this amount
max_ws_interval = 117.0                     ; max time(ticks) to stop wheelspin
min_ws_interval = 27.0                      ; min time(ticks) to stop wheelspin
minimum_rpm = 1000.0                        ; min. engine rpm (e.g., when car idle)
pitch_accel_coeff = 3.0                     ; value * averaged_applied_tire_dlong_accel = radians of pitch
roll_accel_coeff = 4.0                      ; value * dlat_accel = radians of roll
tire_temp_increment = 0.0125                ; increment for tire warmup waypoint
wheelspin_min_adj_coeff = 0.75              ; max grip reduction from wheelspin
;yaw_accel_k1 = 0.02                         ; k1 for yaw accel. spring/damper
yaw_accel_k1 = 1.0                         ; k1 for yaw accel. spring/damper
;yaw_accel_k2 = 0.2                          ; k2 for yaw accel. spring/damper
yaw_accel_k2 = 1.0                          ; k2 for yaw accel. spring/damper
yaw_accel_control_angle = 2.6               ; slip factor above which accel spring/damper effect is reduced
yaw_accel_control_dropoff = 5.0             ; dropoff factor above control angle

[ ASC ]
update_interval = 180                       ; Time in ticks between ASC adjustments
max_str_delta_neg = 0.04                    ; max ai strength variation per second, when slowing down
max_str_delta_pos = 0.08                    ; max ai strength variation per second, when speeding up
kdt1 = 0.0013                               ; factor for dt
kdt3_ahead = 0.00000035                     ; factor for dt^3 when AI is ahead
kdt3_behind = 0.0000006                     ; factor for dt^3 when AI is behind
kddt1 = 1.0                                 ; factor for ddt
kddt3_fast = 150.0                          ; factor for ddt^3 when AI is faster
kddt3_slow = 250.0                          ; factor for ddt^3 when AI is slower
str_min = 0.5                               ; minimum possible ai strength
str_max = 1.3                               ; maximum possible ai strength
gain_rate = 0.006                           ; gain returns to 1.0 at this amount per second
base_bias_low = 0.05                        ; % bias towards base ai strength per second, when below base strength
base_bias_high = 0.01                       ; % bias towards base ai strength per second, when above base strength

; *************************************
; CAR CLASS PARAMETERS 
; *************************************

[ CUP ]
braking_efficiency_coeff = 0.94             ; value * adj_traction_circle = max. decel
nominal_max_accel = 0.006806                ; accel. in meters/tick^2 (1G = 0.007562)
nominal_traction_circle = 0.0135            ; same units as accel. (meters/tick^2) -- 1.78 * ONE_G
;nominal_traction_circle = 0.5            ; same units as accel. (meters/tick^2) -- 1.78 * ONE_G
